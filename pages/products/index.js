
import React from 'react';
import { Nav } from '../../components/Nav';
import  Head from 'next/head';
import { useRouter } from 'next/router';
import ProductCard from '../../components/ProductCard';
import { Divider, Grid, Spacer, Text, useMediaQuery } from '@geist-ui/react';
import { useProducts } from '../../frameworks/supabase/api/products';
import {useFilterTopic} from '../../frameworks/supabase/api/filtertopic'
import { Popupform } from '../../components/PopupPage/PopupForm';

export default function Products(){
    const { category } = useRouter().query
    const {data: products} = useProducts()
    const {data: filtertopic} = useFilterTopic()
    const [popUpForm, setPopUpForm] = React.useState(false)
    const [popUpTopic, setPopUpTopic] = React.useState('')
    const isMobile = useMediaQuery('mobile')

    const popUp = (topic) => {
      setPopUpForm(true)
      setPopUpTopic(topic)
    }
    return <div>
    <Head>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Nav/>
    <div style = {{
      width: '100%',
      height: '80px',
      display: 'flex',
      flexDirection: 'row',
      border: '1px solid lightgray'
    }}>
      <div style = {{
        alignItems: 'center',
        display: 'flex',
        flexDirection: 'row',
        marginLeft: 'auto',
        height: '100%'
      }}>
        {filtertopic?.map((item, id) => id == 0 ? <div className = "" style = {{
          width: '150px',
          height: '100%',
          borderLeft: '1px solid lightgray',
          borderRight: '1px solid lightgray',
          alignItems: 'center',
          justifyContent: 'center',
          display: 'flex',
        }} onClick={() => popUp(item.label)}>{item.label}</div> : <div style = {{
          width: '150px',
          height: '100%',
          alignItems: 'center',
          justifyContent: 'center',
          display: 'flex',
          borderRight: '1px solid lightgray'
        }} onClick={() => popUp(item.label)}>{item.label}</div>)}
      </div>
    </div>
    <Spacer h={2}/>
    <Grid.Container  direction='row' justify='space-around'  gap={isMobile ? 0 : 2}  >
      {
          products?.map((item, id) => <Grid justify='center' alignItems='center' key={id} xs={24} sm={12} md={6} ><ProductCard width={300} height={300} data={item} /></Grid>)
      }
    </Grid.Container>
    <Popupform open={popUpForm} onClose={() => {setPopUpForm(false)}} title={popUpTopic}></Popupform>
  </div>
}
